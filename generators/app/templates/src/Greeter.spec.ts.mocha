import * as chai from 'chai';
import * as sinon from 'sinon';
import * as sinonChai from 'sinon-chai';

import { Greeter } from './Greeter';

const expect = chai.expect;
chai.use(sinonChai);

describe('Greeter', () => {

    let greeter:Greeter = new Greeter();

    it('should exist', () => {
        expect(Greeter).to.exist;
        expect(Greeter).to.be.a.constructor;
    });

    describe('greet()', () => {

        beforeEach(() => {
            sinon.spy(console, 'log');
        });

        it('should exist', () => {
            expect(greeter.greet).to.exist;
            expect(typeof greeter.greet).to.be.eq('function');
        });

        it('should print a default greeting to the console', () => {
            greeter.greet('World');

            expect(console.log).to.have.been.calledWith('Hello, World');
        });

        it('should use a custom greeting if provided', () => {
            greeter = new Greeter('Hola');

            greeter.greet('World');

            expect(console.log).to.have.been.calledWith('Hola, World');
        });

        afterEach(() => {
            console.log.restore();
        });

    });
});
